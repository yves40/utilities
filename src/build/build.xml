<?xml version="1.0" encoding="windows-1252" ?>
<!-- 
     build.xml for the incredible Loader tool
     
     Sep 23 2013    Initial
     Sep 24 2013    Additional parameter files
     May 02 2014    SBEB revival
     May 20 2014    SBEB revival. Unified build.xml for java tools
     May 21 2014    jpa deployment on vbox12c
     May 23 2014    jpa deployment from asusp4
     Sep 20 2014    loadtool on hpblade1
     Sep 21 2014    review of loadtool deployment task
     Oct 11 2014    Scan listener test for loadtool. Clean target files before deployment
     Jan 05 2015    Reafactor SQL working classes of loadtool
     Apr 27 2015    Test java compiler arguments
     Apr 28 2015    JAVA directories reorg
     May 04 2015    loadtool and J2EE 7
     May 20 2016    Improve common log4j.xml file deployment
     Jun 18 2017    Manifest for baseconnect modified; No more sqltools package
     Feb 18 2019    Vscode
     
-->
<project default="help">
    <property file="./build.properties"/>
    <import file="./libs.xml"/>
    <!-- 
     Menu
    -->
    <target name="help">
        <echo message="-----> Available Targets "></echo>
        <echo message="-----> .......... shiplib          : Rebuild the utilities library jar file"></echo>
        <echo message="-----> "></echo>
    </target>

    <!--
    Build my libraries
    -->
    <target name="shiplib" depends="compilelib">

        <jar destfile="${bld.dir}/javalibs/utilities.jar" basedir="${bld.dir}/javalibs" includes="**/*.class, **/*.xml" >
            <manifest>
                <attribute name="Built-By" value="${user.name}"/>
                <attribute name="Specification-Title" value="Utilities"/>
                <attribute name="Specification-Version" value="${build.version}"/>
                <attribute name="Specification-Vendor" value="Mouserabbit"/>
                <attribute name="Implementation-Version" value="${build.version} ${TODAY}"/>
                <attribute name="Implementation-Vendor" value="Mouserabbit"/>
            </manifest>
        </jar>
        
        <copy todir="${libs.home}/UTILITIES" verbose="true">
              <fileset dir="${bld.dir}/javalibs" includes="utilities.jar"/>
        </copy>
    </target>


    
    <!-- *******************************************************************************************************-->
    <!--  Library jar file  -->
    <!-- *******************************************************************************************************-->
    <target name="initlib">
        <mkdir dir="${bld.dir}/javalibs"/>
        <mkdir dir="${bld.dir}/javalibs/META-INF"/>
        <echo message="-----> Shoot Class files from ${bld.dir}/javalibs"></echo>
        <delete verbose="true" includeemptydirs="true">
              <fileset dir="${bld.dir}/javalibs" includes="**/*.class"/>
        </delete>
        <echo message="-----> Creating the root build directorie in ${bld.dir}/javalibs"></echo>
    </target>
    
    <target name="compilelib" depends="initlib">
        <echo message="-----> Compile Java classes from ${javasources.dir}/utilities"></echo>
        <javac srcdir="${javasources.dir}/org/mouserabbit/utilities" destdir="${bld.dir}/javalibs" classpathref="classpath" debug="${javac.debug}" 
                nowarn="${javac.nowarn}" source="1.8" target="1.8"
                deprecation="${javac.deprecation}" encoding="Cp1252" verbose="false" 
                excludes="**/LogGenerator.java">
               <!-- 
                <compilerarg value="-Xlint:unchecked"/>
                <compilerarg value="-Xlint:deprecation"/> 
                -->
        </javac>
    </target>
    
    
    
    <!-- *******************************************************************************************************-->
    <!--  Generic deploy task for a jar file  -->
    <!-- *******************************************************************************************************-->
    <target name="deploy">
        <sshexec host="${remote.host}" username="${remote.hostaccount}" command="rm -f ${remote.dir}/**/*.sql"
                 password="${remote.accountpass}" trust="true" verbose="false"/>
        <sshexec host="${remote.host}" username="${remote.hostaccount}" command="rm -f ${remote.dir}/**/*.xml"
                 password="${remote.accountpass}" trust="true" verbose="false"/>
        <echo message="-----> Copy the ${zipfile} file to ${remote.host}"></echo>
        <scp todir="${remote.hostaccount}@${remote.host}:${remote.dir}" password="${remote.accountpass}" trust="true"
             verbose="${copy.verbosemode}">
            <fileset dir="${runtime.home}">
                <include name="${zipfile}"/>
            </fileset>
        </scp>
        <scp todir="${remote.hostaccount}@${remote.host}:${remote.dir}" password="${remote.accountpass}" trust="true"
             verbose="${copy.verbosemode}">
            <fileset dir="${javasources.dir}">
                <include name="log4j-unix.xml"/>
            </fileset>
        </scp>
        <echo message="-----> Unzip ${zipfile} on ${remote.host}"></echo>
        <sshexec host="${remote.host}" username="${remote.hostaccount}"
                 command="unzip -o ${remote.dir}/${zipfile} -d ${remote.dir}" password="${remote.accountpass}"
                 trust="true" verbose="${zip.verbosemode}"/>
        <sshexec host="${remote.host}" username="${remote.hostaccount}" command="rm -f ${remote.dir}/${zipfile}"
                 password="${remote.accountpass}" trust="true" verbose="false"/>
        <sshexec host="${remote.host}" username="${remote.hostaccount}"
                 command="mv ${remote.dir}/log4j-unix.xml ${remote.dir}/log4j.xml" password="${remote.accountpass}"
                 trust="true" verbose="false"/>
        <sshexec command="chmod +x ${remote.dir}/*.sh ${remote.dir}/*.sh" host="${remote.host}"
                 username="${remote.hostaccount}" password="${remote.accountpass}" trust="true"
                 verbose="${copy.verbosemode}"/>
    </target>
    <!-- Local copy of log4j.xml -->
    <target name="log4j">
        <echo message="-----> Update the common log4j file."></echo>
        <copy verbose="true" tofile="${runtime.home}/log4j.xml">
            <fileset dir="${javasources.dir}" includes="log4j-windows.xml"/>
        </copy>
        <move file="${runtime.home}/log4j-windows.xml" tofile="${runtime.home}/log4j.xml"/>
    </target>
</project>
